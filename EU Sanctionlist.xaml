<Activity mc:Ignorable="sap sap2010" x:Class="EU_Sanctionlist" this:EU_Sanctionlist.isIndividual="False" this:EU_Sanctionlist.confidenceLevel="90" this:EU_Sanctionlist.country="[String.Empty]" this:EU_Sanctionlist.firstName="[String.Empty]" this:EU_Sanctionlist.lastName="[String.Empty]" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sxl="clr-namespace:System.Xml.Linq;assembly=System.Xml.Linq" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:usa="clr-namespace:UipathTeam.String.Activities;assembly=LevenshteinAlgorithm" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="isIndividual" Type="InArgument(x:Boolean)" />
    <x:Property Name="confidenceLevel" Type="InArgument(x:Single)" />
    <x:Property Name="country" Type="InArgument(x:String)" />
    <x:Property Name="riskLevel" Type="OutArgument(x:String)" />
    <x:Property Name="riskReason" Type="OutArgument(x:String)" />
    <x:Property Name="firstName" Type="InArgument(x:String)" />
    <x:Property Name="lastName" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1445,2781</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>EU_Sanctionlist_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Security</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Checks the list of EU sanctions for possible matches." DisplayName="EU Sanctionlist" sap:VirtualizedContainerService.HintSize="1425,2721" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Default="C:\Users\Marc\Downloads\eu_sanctions.xml" Name="sanctionFile" />
      <Variable x:TypeArguments="x:String" Default="https://webgate.ec.europa.eu/europeaid/fsd/fsf/public/files/xmlFullSanctionsList_1_1/content?token=dG9rZW4tMjAxNw" Name="sanctionUrl" />
      <Variable x:TypeArguments="x:String" Name="xml" />
      <Variable x:TypeArguments="sxl:XDocument" Name="xmlDeserialized" />
      <Variable x:TypeArguments="x:Single" Default="0" Name="nameConfidence" />
      <Variable x:TypeArguments="x:Single" Default="0" Name="countryConfidence" />
      <Variable x:TypeArguments="x:String" Default="[(firstName + &quot; &quot; + lastName).Trim().toUpper()]" Name="fullName" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign DisplayName="Clean country name" sap:VirtualizedContainerService.HintSize="1383,60" sap2010:WorkflowViewState.IdRef="Assign_16">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[country]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[country.Trim().ToUpper()]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Initial risk level" sap:VirtualizedContainerService.HintSize="1383,60" sap2010:WorkflowViewState.IdRef="Assign_17">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[riskLevel]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">Low</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="initial risk reason" sap:VirtualizedContainerService.HintSize="1383,60" sap2010:WorkflowViewState.IdRef="Assign_18">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[riskReason]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">["No EU sanction found"]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:HttpClient Body="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResponseHeaders="{x:Null}" Result="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="XML" sap2010:Annotation.AnnotationText="Download the file from the server and store it in the downloads folder." BodyFormat="application/xml" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="Download sanction list" EndPoint="[sanctionUrl]" sap:VirtualizedContainerService.HintSize="1383,82" sap2010:WorkflowViewState.IdRef="HttpClient_1" Method="GET" ResourcePath="[sanctionFile]" TimeoutMS="6000">
      <ui:HttpClient.Attachments>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.Attachments>
      <ui:HttpClient.Cookies>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.Cookies>
      <ui:HttpClient.Headers>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.Headers>
      <ui:HttpClient.Parameters>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.Parameters>
      <ui:HttpClient.UrlSegments>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.UrlSegments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:HttpClient>
    <ui:ReadTextFile Content="[xml]" DisplayName="Read sanction file" FileName="[sanctionFile]" sap:VirtualizedContainerService.HintSize="1383,134" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
    <ui:DeserializeXml DisplayName="Parse sanction list" sap:VirtualizedContainerService.HintSize="1383,60" sap2010:WorkflowViewState.IdRef="DeserializeXml_1" XMLDocument="[xmlDeserialized]" XMLString="[xml]" />
    <Assign sap2010:Annotation.AnnotationText="Removes possible XML namespaces in order to make parsing easier." DisplayName="Remove XML namespaces" sap:VirtualizedContainerService.HintSize="1383,104" sap2010:WorkflowViewState.IdRef="Assign_4">
      <Assign.To>
        <OutArgument x:TypeArguments="sxl:XDocument">[xmlDeserialized]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="sxl:XDocument">[XDocument.Parse(xml.Replace(xmlDeserialized.Root.Name.Namespace.ToString(), string.Empty))]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <If sap2010:Annotation.AnnotationText="Read the sanction file depending on whether it is a legal entity or a person that is searched." Condition="[isIndividual]" sap:VirtualizedContainerService.HintSize="1383,1554" sap2010:WorkflowViewState.IdRef="If_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence DisplayName="Individual" sap:VirtualizedContainerService.HintSize="669,1373" sap2010:WorkflowViewState.IdRef="Sequence_12">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Loop through all natural person sanctions." DisplayName="For Each" sap:VirtualizedContainerService.HintSize="627,1281" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[xmlDeserialized.Descendants(&quot;sanctionEntity&quot;).Where(Function(el) Not IsNothing(el.Element(&quot;subjectType&quot;)) And &quot;person&quot;.Equals(el.Element(&quot;subjectType&quot;).Attribute(&quot;code&quot;).Value))]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="sxl:XElement">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sxl:XElement" Name="individual" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Individual Text" sap:VirtualizedContainerService.HintSize="591,1115" sap2010:WorkflowViewState.IdRef="Sequence_11">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="individualFullName">
                      <Variable.Default>
                        <Literal x:TypeArguments="x:String" Value="" />
                      </Variable.Default>
                    </Variable>
                    <Variable x:TypeArguments="x:String" Name="individualNationality">
                      <Variable.Default>
                        <Literal x:TypeArguments="x:String" Value="" />
                      </Variable.Default>
                    </Variable>
                    <Variable x:TypeArguments="x:String" Name="individualRegulation">
                      <Variable.Default>
                        <Literal x:TypeArguments="x:String" Value="" />
                      </Variable.Default>
                    </Variable>
                    <Variable x:TypeArguments="x:String" Name="individualRemark">
                      <Variable.Default>
                        <Literal x:TypeArguments="x:String" Value="" />
                      </Variable.Default>
                    </Variable>
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Read name" sap:VirtualizedContainerService.HintSize="549,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[individualFullName]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[individual.Element("nameAlias").Attribute("wholeName").Value.Trim().ToUpper()]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Read regulation no." sap:VirtualizedContainerService.HintSize="549,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[individualRegulation]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[individual.Element("regulation").Attribute("numberTitle").Value]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Read nationality" sap:VirtualizedContainerService.HintSize="549,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[individualNationality]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[if(isNothing(individual.Element("citizenship")), "", individual.Element("citizenship").Attribute("countryDescription").Value.Trim().ToUpper())]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Read remark" sap:VirtualizedContainerService.HintSize="549,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[individualRemark]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[if(isNothing(individual.Element("remark")), "", individual.Element("remark").Value)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <usa:LevenshteinAlgorithm DisplayName="Check name similarity" sap:VirtualizedContainerService.HintSize="549,22" sap2010:WorkflowViewState.IdRef="LevenshteinAlgorithm_5" OutputPercentange="[nameConfidence]" StringOne="[fullName]" StringTwo="[individualFullName]" />
                  <usa:LevenshteinAlgorithm DisplayName="Check nationality similarity" sap:VirtualizedContainerService.HintSize="549,22" sap2010:WorkflowViewState.IdRef="LevenshteinAlgorithm_6" OutputPercentange="[countryConfidence]" StringOne="[country]" StringTwo="[individualNationality]" />
                  <If sap2010:Annotation.AnnotationText="Check for matches with name and country. Nationality is ignored if none was passed." Condition="[(fullName.Contains(individualFullName) Or individualFullName.Contains(fullName) Or nameConfidence &gt;= confidenceLevel) And&#xA;(String.IsNullOrWhiteSpace(country) Or String.IsNullOrWhiteSpace(individualNationality) Or country.Contains(individualNationality) Or individualNationality.Contains(country) Or countryConfidence &gt;= confidenceLevel)]" sap:VirtualizedContainerService.HintSize="549,499" sap2010:WorkflowViewState.IdRef="If_6">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="304,314" sap2010:WorkflowViewState.IdRef="Sequence_13">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[riskLevel]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">High</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[riskReason]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">["Found possible EU sanction in list " + individualRegulation + "with remark" + individualRemark]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:Break sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Break_3" />
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <ui:Continue sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Continue_3" />
                    </If.Else>
                  </If>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="Entity" sap:VirtualizedContainerService.HintSize="669,1373" sap2010:WorkflowViewState.IdRef="Sequence_16">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Loop through all legal entity sanctions." DisplayName="For Each" sap:VirtualizedContainerService.HintSize="627,1281" sap2010:WorkflowViewState.IdRef="ForEach`1_8" Values="[xmlDeserialized.Descendants(&quot;sanctionEntity&quot;).Where(Function(el) Not IsNothing(el.Element(&quot;subjectType&quot;)) And &quot;enterprise&quot;.Equals(el.Element(&quot;subjectType&quot;).Attribute(&quot;code&quot;).Value))]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="sxl:XElement">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sxl:XElement" Name="entity" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Entity Text" sap:VirtualizedContainerService.HintSize="591,1115" sap2010:WorkflowViewState.IdRef="Sequence_15">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="entityFullName">
                      <Variable.Default>
                        <Literal x:TypeArguments="x:String" Value="" />
                      </Variable.Default>
                    </Variable>
                    <Variable x:TypeArguments="x:String" Name="entityCountry">
                      <Variable.Default>
                        <Literal x:TypeArguments="x:String" Value="" />
                      </Variable.Default>
                    </Variable>
                    <Variable x:TypeArguments="x:String" Name="entityRegulation" />
                    <Variable x:TypeArguments="x:String" Name="entityRemark" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Read name" sap:VirtualizedContainerService.HintSize="549,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[entityFullName]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[entity.Element("nameAlias").Attribute("wholeName").Value.Trim().ToUpper()]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Read regulation no." sap:VirtualizedContainerService.HintSize="549,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[entityRegulation]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[entity.Element("regulation").Attribute("numberTitle").Value]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Read address" sap:VirtualizedContainerService.HintSize="549,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[entityCountry]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[if(isNothing(entity.Element("address")), "", entity.Element("address").Attribute("countryDescription").Value.Trim().ToUpper())]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Read remark" sap:VirtualizedContainerService.HintSize="549,60" sap2010:WorkflowViewState.IdRef="Assign_29">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[entityRemark]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[if(isNothing(entity.Element("remark")), "", entity.Element("remark").Value)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <usa:LevenshteinAlgorithm DisplayName="Check name similarity" sap:VirtualizedContainerService.HintSize="549,22" sap2010:WorkflowViewState.IdRef="LevenshteinAlgorithm_7" OutputPercentange="[nameConfidence]" StringOne="[fullName.Trim().ToUpper()]" StringTwo="[entityFullName.Trim().ToUpper()]" />
                  <usa:LevenshteinAlgorithm DisplayName="Check country similarity" sap:VirtualizedContainerService.HintSize="549,22" sap2010:WorkflowViewState.IdRef="LevenshteinAlgorithm_8" OutputPercentange="[countryConfidence]" StringOne="[country.Trim().ToUpper()]" StringTwo="[entityCountry.Trim().ToUpper()]" />
                  <If sap2010:Annotation.AnnotationText="Check for matches with name and country. Country is ignored if none was passed." Condition="[(fullName.Contains(entityFullname.Trim()) Or entityFullname.Contains(fullName.Trim()) Or nameConfidence &gt;= confidenceLevel) And&#xD;&#xA;(String.IsNullOrWhiteSpace(country) Or String.IsNullOrWhiteSpace(entityCountry) Or &quot;UNKNOWN&quot;.Equals(entityCountry) Or country.Contains(entityCountry) Or entityCountry.Contains(country) Or countryConfidence &gt;= confidenceLevel)]" sap:VirtualizedContainerService.HintSize="549,499" sap2010:WorkflowViewState.IdRef="If_8">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="304,314" sap2010:WorkflowViewState.IdRef="Sequence_14">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[riskLevel]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">["High"]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[riskReason]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">["Found possible EU sanction in list " + entityRegulation + " with remark " + entityRemark]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:Break sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Break_4" />
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <ui:Continue sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Continue_5" />
                    </If.Else>
                  </If>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
        </Sequence>
      </If.Else>
    </If>
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="1383,62" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[&quot;EU Risk Level: &quot; + riskLevel]" />
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="1383,62" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[&quot;EU Risk Reason: &quot; + riskReason]" />
  </Sequence>
</Activity>